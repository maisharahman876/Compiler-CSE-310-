Terminals unused in grammar

    DEFAULT
    CHAR
    DOUBLE
    MAIN
    DO
    CONST_CHAR


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier id in_func LPAREN parameter_list RPAREN lookup SEMICOLON
    8                 | type_specifier id in_func LPAREN RPAREN lookup SEMICOLON

    9 id: ID

   10 in_func: %empty

   11 lookup: %empty

   12 lookup1: %empty

   13 func_definition: type_specifier id in_func LPAREN parameter_list RPAREN lookup1 compound_statement
   14                | type_specifier id in_func LPAREN RPAREN lookup1 compound_statement

   15 parameter_list: parameter_list COMMA type_specifier id
   16               | parameter_list COMMA type_specifier
   17               | type_specifier id
   18               | type_specifier

   19 compound_statement: LCURL newScope statements RCURL
   20                   | LCURL newScope RCURL

   21 newScope: %empty

   22 var_declaration: type_specifier declaration_list SEMICOLON

   23 type_specifier: INT
   24               | FLOAT
   25               | VOID

   26 declaration_list: declaration_list COMMA id
   27                 | declaration_list COMMA id LTHIRD CONST_INT RTHIRD
   28                 | id
   29                 | id LTHIRD CONST_INT RTHIRD

   30 statements: statement
   31           | statements statement

   32 statement: var_declaration
   33          | expression_statement
   34          | compound_statement
   35          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement ELSE statement
   38          | WHILE LPAREN expression RPAREN statement
   39          | PRINTLN LPAREN id RPAREN SEMICOLON
   40          | RETURN expression SEMICOLON

   41 expression_statement: SEMICOLON
   42                     | expression SEMICOLON

   43 variable: id
   44         | id LTHIRD expression RTHIRD

   45 expression: logic_expression
   46           | variable ASSIGNOP logic_expression

   47 logic_expression: rel_expression
   48                 | rel_expression LOGICOP rel_expression

   49 rel_expression: simple_expression
   50               | simple_expression RELOP simple_expression

   51 simple_expression: term
   52                  | simple_expression ADDOP term

   53 term: unary_expression
   54     | term MULOP unary_expression

   55 unary_expression: ADDOP unary_expression
   56                 | NOT unary_expression
   57                 | factor

   58 factor: variable
   59       | id LPAREN argument_list RPAREN
   60       | LPAREN expression RPAREN
   61       | CONST_INT
   62       | CONST_FLOAT
   63       | variable INCOP
   64       | variable DECOP

   65 argument_list: arguments
   66              | %empty

   67 arguments: arguments COMMA logic_expression
   68          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF <siv> (258) 36 37
    ELSE <siv> (259) 37
    FOR <siv> (260) 35
    WHILE <siv> (261) 38
    DEFAULT <siv> (262)
    VOID <siv> (263) 25
    CHAR <siv> (264)
    INT <siv> (265) 23
    DOUBLE <siv> (266)
    MAIN <siv> (267)
    RETURN <siv> (268) 40
    FLOAT <siv> (269) 24
    PRINTLN <siv> (270) 39
    DO <siv> (271)
    ADDOP <siv> (272) 52 55
    INCOP <siv> (273) 63
    DECOP <siv> (274) 64
    MULOP <siv> (275) 54
    ASSIGNOP <siv> (276) 46
    RELOP <siv> (277) 50
    LOGICOP <siv> (278) 48
    NOT <siv> (279) 56
    LPAREN <siv> (280) 7 8 13 14 35 36 37 38 39 59 60
    RPAREN <siv> (281) 7 8 13 14 35 36 37 38 39 59 60
    LCURL <siv> (282) 19 20
    RCURL <siv> (283) 19 20
    LTHIRD <siv> (284) 27 29 44
    RTHIRD <siv> (285) 27 29 44
    COMMA <siv> (286) 15 16 26 27 67
    SEMICOLON <siv> (287) 7 8 22 39 40 41 42
    ID <siv> (288) 9
    CONST_INT <siv> (289) 27 29 61
    CONST_CHAR <siv> (290)
    CONST_FLOAT <siv> (291) 62
    nothing (292)


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    start <vecv> (39)
        on left: 1
        on right: 0
    program <vecv> (40)
        on left: 2 3
        on right: 1 2
    unit <vecv> (41)
        on left: 4 5 6
        on right: 2 3
    func_declaration <vecv> (42)
        on left: 7 8
        on right: 5
    id <siv> (43)
        on left: 9
        on right: 7 8 13 14 15 17 26 27 28 29 39 43 44 59
    in_func <ival> (44)
        on left: 10
        on right: 7 8 13 14
    lookup (45)
        on left: 11
        on right: 7 8
    lookup1 (46)
        on left: 12
        on right: 13 14
    func_definition <vecv> (47)
        on left: 13 14
        on right: 6
    parameter_list <vecv> (48)
        on left: 15 16 17 18
        on right: 7 13 15 16
    compound_statement <vecv> (49)
        on left: 19 20
        on right: 13 14 34
    newScope <ival> (50)
        on left: 21
        on right: 19 20
    var_declaration <vecv> (51)
        on left: 22
        on right: 4 32
    type_specifier <siv> (52)
        on left: 23 24 25
        on right: 7 8 13 14 15 16 17 18 22
    declaration_list <vecv> (53)
        on left: 26 27 28 29
        on right: 22 26 27
    statements <vecv> (54)
        on left: 30 31
        on right: 19 31
    statement <vecv> (55)
        on left: 32 33 34 35 36 37 38 39 40
        on right: 30 31 35 36 37 38
    expression_statement <vecv> (56)
        on left: 41 42
        on right: 33 35
    variable <vecv> (57)
        on left: 43 44
        on right: 46 58 63 64
    expression <vecv> (58)
        on left: 45 46
        on right: 35 36 37 38 40 42 44 60
    logic_expression <vecv> (59)
        on left: 47 48
        on right: 45 46 67 68
    rel_expression <vecv> (60)
        on left: 49 50
        on right: 47 48
    simple_expression <vecv> (61)
        on left: 51 52
        on right: 49 50 52
    term <vecv> (62)
        on left: 53 54
        on right: 51 52 54
    unary_expression <vecv> (63)
        on left: 55 56 57
        on right: 53 54 55 56
    factor <vecv> (64)
        on left: 58 59 60 61 62 63 64
        on right: 57
    argument_list <vecv> (65)
        on left: 65 66
        on right: 59
    arguments <vecv> (66)
        on left: 67 68
        on right: 65 67


State 0

    0 $accept: . start $end

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   25 type_specifier: VOID .

    $default  reduce using rule 25 (type_specifier)


State 2

   23 type_specifier: INT .

    $default  reduce using rule 23 (type_specifier)


State 3

   24 type_specifier: FLOAT .

    $default  reduce using rule 24 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . id in_func LPAREN parameter_list RPAREN lookup SEMICOLON
    8                 | type_specifier . id in_func LPAREN RPAREN lookup SEMICOLON
   13 func_definition: type_specifier . id in_func LPAREN parameter_list RPAREN lookup1 compound_statement
   14                | type_specifier . id in_func LPAREN RPAREN lookup1 compound_statement
   22 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    id                go to state 14
    declaration_list  go to state 15


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    9 id: ID .

    $default  reduce using rule 9 (id)


State 14

    7 func_declaration: type_specifier id . in_func LPAREN parameter_list RPAREN lookup SEMICOLON
    8                 | type_specifier id . in_func LPAREN RPAREN lookup SEMICOLON
   13 func_definition: type_specifier id . in_func LPAREN parameter_list RPAREN lookup1 compound_statement
   14                | type_specifier id . in_func LPAREN RPAREN lookup1 compound_statement
   28 declaration_list: id .
   29                 | id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    LPAREN    reduce using rule 10 (in_func)
    $default  reduce using rule 28 (declaration_list)

    in_func  go to state 17


State 15

   22 var_declaration: type_specifier declaration_list . SEMICOLON
   26 declaration_list: declaration_list . COMMA id
   27                 | declaration_list . COMMA id LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 16

   29 declaration_list: id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 20


State 17

    7 func_declaration: type_specifier id in_func . LPAREN parameter_list RPAREN lookup SEMICOLON
    8                 | type_specifier id in_func . LPAREN RPAREN lookup SEMICOLON
   13 func_definition: type_specifier id in_func . LPAREN parameter_list RPAREN lookup1 compound_statement
   14                | type_specifier id in_func . LPAREN RPAREN lookup1 compound_statement

    LPAREN  shift, and go to state 21


State 18

   26 declaration_list: declaration_list COMMA . id
   27                 | declaration_list COMMA . id LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 13

    id  go to state 22


State 19

   22 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


State 20

   29 declaration_list: id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 23


State 21

    7 func_declaration: type_specifier id in_func LPAREN . parameter_list RPAREN lookup SEMICOLON
    8                 | type_specifier id in_func LPAREN . RPAREN lookup SEMICOLON
   13 func_definition: type_specifier id in_func LPAREN . parameter_list RPAREN lookup1 compound_statement
   14                | type_specifier id in_func LPAREN . RPAREN lookup1 compound_statement

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    RPAREN  shift, and go to state 24

    parameter_list  go to state 25
    type_specifier  go to state 26


State 22

   26 declaration_list: declaration_list COMMA id .
   27                 | declaration_list COMMA id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 27

    $default  reduce using rule 26 (declaration_list)


State 23

   29 declaration_list: id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 29 (declaration_list)


State 24

    8 func_declaration: type_specifier id in_func LPAREN RPAREN . lookup SEMICOLON
   14 func_definition: type_specifier id in_func LPAREN RPAREN . lookup1 compound_statement

    LCURL     reduce using rule 12 (lookup1)
    $default  reduce using rule 11 (lookup)

    lookup   go to state 28
    lookup1  go to state 29


State 25

    7 func_declaration: type_specifier id in_func LPAREN parameter_list . RPAREN lookup SEMICOLON
   13 func_definition: type_specifier id in_func LPAREN parameter_list . RPAREN lookup1 compound_statement
   15 parameter_list: parameter_list . COMMA type_specifier id
   16               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 30
    COMMA   shift, and go to state 31


State 26

   17 parameter_list: type_specifier . id
   18               | type_specifier .

    ID  shift, and go to state 13

    $default  reduce using rule 18 (parameter_list)

    id  go to state 32


State 27

   27 declaration_list: declaration_list COMMA id LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 33


State 28

    8 func_declaration: type_specifier id in_func LPAREN RPAREN lookup . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 29

   14 func_definition: type_specifier id in_func LPAREN RPAREN lookup1 . compound_statement

    LCURL  shift, and go to state 35

    compound_statement  go to state 36


State 30

    7 func_declaration: type_specifier id in_func LPAREN parameter_list RPAREN . lookup SEMICOLON
   13 func_definition: type_specifier id in_func LPAREN parameter_list RPAREN . lookup1 compound_statement

    LCURL     reduce using rule 12 (lookup1)
    $default  reduce using rule 11 (lookup)

    lookup   go to state 37
    lookup1  go to state 38


State 31

   15 parameter_list: parameter_list COMMA . type_specifier id
   16               | parameter_list COMMA . type_specifier

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3

    type_specifier  go to state 39


State 32

   17 parameter_list: type_specifier id .

    $default  reduce using rule 17 (parameter_list)


State 33

   27 declaration_list: declaration_list COMMA id LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 40


State 34

    8 func_declaration: type_specifier id in_func LPAREN RPAREN lookup SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 35

   19 compound_statement: LCURL . newScope statements RCURL
   20                   | LCURL . newScope RCURL

    $default  reduce using rule 21 (newScope)

    newScope  go to state 41


State 36

   14 func_definition: type_specifier id in_func LPAREN RPAREN lookup1 compound_statement .

    $default  reduce using rule 14 (func_definition)


State 37

    7 func_declaration: type_specifier id in_func LPAREN parameter_list RPAREN lookup . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 38

   13 func_definition: type_specifier id in_func LPAREN parameter_list RPAREN lookup1 . compound_statement

    LCURL  shift, and go to state 35

    compound_statement  go to state 43


State 39

   15 parameter_list: parameter_list COMMA type_specifier . id
   16               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 13

    $default  reduce using rule 16 (parameter_list)

    id  go to state 44


State 40

   27 declaration_list: declaration_list COMMA id LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


State 41

   19 compound_statement: LCURL newScope . statements RCURL
   20                   | LCURL newScope . RCURL

    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    RETURN       shift, and go to state 48
    FLOAT        shift, and go to state 3
    PRINTLN      shift, and go to state 49
    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 35
    RCURL        shift, and go to state 53
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    compound_statement    go to state 58
    var_declaration       go to state 59
    type_specifier        go to state 60
    statements            go to state 61
    statement             go to state 62
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 42

    7 func_declaration: type_specifier id in_func LPAREN parameter_list RPAREN lookup SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 43

   13 func_definition: type_specifier id in_func LPAREN parameter_list RPAREN lookup1 compound_statement .

    $default  reduce using rule 13 (func_definition)


State 44

   15 parameter_list: parameter_list COMMA type_specifier id .

    $default  reduce using rule 15 (parameter_list)


State 45

   36 statement: IF . LPAREN expression RPAREN statement
   37          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 72


State 46

   35 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 73


State 47

   38 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 74


State 48

   40 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 64
    expression         go to state 75
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 49

   39 statement: PRINTLN . LPAREN id RPAREN SEMICOLON

    LPAREN  shift, and go to state 76


State 50

   55 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                go to state 57
    variable          go to state 77
    unary_expression  go to state 78
    factor            go to state 71


State 51

   56 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                go to state 57
    variable          go to state 77
    unary_expression  go to state 79
    factor            go to state 71


State 52

   60 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 64
    expression         go to state 80
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 53

   20 compound_statement: LCURL newScope RCURL .

    $default  reduce using rule 20 (compound_statement)


State 54

   41 expression_statement: SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 55

   61 factor: CONST_INT .

    $default  reduce using rule 61 (factor)


State 56

   62 factor: CONST_FLOAT .

    $default  reduce using rule 62 (factor)


State 57

   43 variable: id .
   44         | id . LTHIRD expression RTHIRD
   59 factor: id . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 81
    LTHIRD  shift, and go to state 82

    $default  reduce using rule 43 (variable)


State 58

   34 statement: compound_statement .

    $default  reduce using rule 34 (statement)


State 59

   32 statement: var_declaration .

    $default  reduce using rule 32 (statement)


State 60

   22 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    id                go to state 83
    declaration_list  go to state 15


State 61

   19 compound_statement: LCURL newScope statements . RCURL
   31 statements: statements . statement

    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    RETURN       shift, and go to state 48
    FLOAT        shift, and go to state 3
    PRINTLN      shift, and go to state 49
    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 35
    RCURL        shift, and go to state 84
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    compound_statement    go to state 58
    var_declaration       go to state 59
    type_specifier        go to state 60
    statement             go to state 85
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 62

   30 statements: statement .

    $default  reduce using rule 30 (statements)


State 63

   33 statement: expression_statement .

    $default  reduce using rule 33 (statement)


State 64

   46 expression: variable . ASSIGNOP logic_expression
   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    INCOP     shift, and go to state 86
    DECOP     shift, and go to state 87
    ASSIGNOP  shift, and go to state 88

    $default  reduce using rule 58 (factor)


State 65

   42 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 66

   45 expression: logic_expression .

    $default  reduce using rule 45 (expression)


State 67

   47 logic_expression: rel_expression .
   48                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 90

    $default  reduce using rule 47 (logic_expression)


State 68

   49 rel_expression: simple_expression .
   50               | simple_expression . RELOP simple_expression
   52 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 49 (rel_expression)


State 69

   51 simple_expression: term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 93

    $default  reduce using rule 51 (simple_expression)


State 70

   53 term: unary_expression .

    $default  reduce using rule 53 (term)


State 71

   57 unary_expression: factor .

    $default  reduce using rule 57 (unary_expression)


State 72

   36 statement: IF LPAREN . expression RPAREN statement
   37          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 64
    expression         go to state 94
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 73

   35 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    expression_statement  go to state 95
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 74

   38 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 64
    expression         go to state 96
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 75

   40 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 76

   39 statement: PRINTLN LPAREN . id RPAREN SEMICOLON

    ID  shift, and go to state 13

    id  go to state 98


State 77

   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    INCOP  shift, and go to state 86
    DECOP  shift, and go to state 87

    $default  reduce using rule 58 (factor)


State 78

   55 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 79

   56 unary_expression: NOT unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 80

   60 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 99


State 81

   59 factor: id LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    $default  reduce using rule 66 (argument_list)

    id                 go to state 57
    variable           go to state 77
    logic_expression   go to state 100
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71
    argument_list      go to state 101
    arguments          go to state 102


State 82

   44 variable: id LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 64
    expression         go to state 103
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 83

   28 declaration_list: id .
   29                 | id . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 28 (declaration_list)


State 84

   19 compound_statement: LCURL newScope statements RCURL .

    $default  reduce using rule 19 (compound_statement)


State 85

   31 statements: statements statement .

    $default  reduce using rule 31 (statements)


State 86

   63 factor: variable INCOP .

    $default  reduce using rule 63 (factor)


State 87

   64 factor: variable DECOP .

    $default  reduce using rule 64 (factor)


State 88

   46 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 77
    logic_expression   go to state 104
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 89

   42 expression_statement: expression SEMICOLON .

    $default  reduce using rule 42 (expression_statement)


State 90

   48 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 77
    rel_expression     go to state 105
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 91

   52 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                go to state 57
    variable          go to state 77
    term              go to state 106
    unary_expression  go to state 70
    factor            go to state 71


State 92

   50 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 77
    simple_expression  go to state 107
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 93

   54 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                go to state 57
    variable          go to state 77
    unary_expression  go to state 108
    factor            go to state 71


State 94

   36 statement: IF LPAREN expression . RPAREN statement
   37          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 109


State 95

   35 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    expression_statement  go to state 110
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 96

   38 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 111


State 97

   40 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 40 (statement)


State 98

   39 statement: PRINTLN LPAREN id . RPAREN SEMICOLON

    RPAREN  shift, and go to state 112


State 99

   60 factor: LPAREN expression RPAREN .

    $default  reduce using rule 60 (factor)


State 100

   68 arguments: logic_expression .

    $default  reduce using rule 68 (arguments)


State 101

   59 factor: id LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 113


State 102

   65 argument_list: arguments .
   67 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 114

    $default  reduce using rule 65 (argument_list)


State 103

   44 variable: id LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 115


State 104

   46 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 46 (expression)


State 105

   48 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 48 (logic_expression)


State 106

   52 simple_expression: simple_expression ADDOP term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 93

    $default  reduce using rule 52 (simple_expression)


State 107

   50 rel_expression: simple_expression RELOP simple_expression .
   52 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 91

    $default  reduce using rule 50 (rel_expression)


State 108

   54 term: term MULOP unary_expression .

    $default  reduce using rule 54 (term)


State 109

   36 statement: IF LPAREN expression RPAREN . statement
   37          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    RETURN       shift, and go to state 48
    FLOAT        shift, and go to state 3
    PRINTLN      shift, and go to state 49
    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 35
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    compound_statement    go to state 58
    var_declaration       go to state 59
    type_specifier        go to state 60
    statement             go to state 116
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 110

   35 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 64
    expression         go to state 117
    logic_expression   go to state 66
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 111

   38 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    RETURN       shift, and go to state 48
    FLOAT        shift, and go to state 3
    PRINTLN      shift, and go to state 49
    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 35
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    compound_statement    go to state 58
    var_declaration       go to state 59
    type_specifier        go to state 60
    statement             go to state 118
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 112

   39 statement: PRINTLN LPAREN id RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 113

   59 factor: id LPAREN argument_list RPAREN .

    $default  reduce using rule 59 (factor)


State 114

   67 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                 go to state 57
    variable           go to state 77
    logic_expression   go to state 120
    rel_expression     go to state 67
    simple_expression  go to state 68
    term               go to state 69
    unary_expression   go to state 70
    factor             go to state 71


State 115

   44 variable: id LTHIRD expression RTHIRD .

    $default  reduce using rule 44 (variable)


State 116

   36 statement: IF LPAREN expression RPAREN statement .
   37          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 121

    $default  reduce using rule 36 (statement)


State 117

   35 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 122


State 118

   38 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 38 (statement)


State 119

   39 statement: PRINTLN LPAREN id RPAREN SEMICOLON .

    $default  reduce using rule 39 (statement)


State 120

   67 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 67 (arguments)


State 121

   37 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    RETURN       shift, and go to state 48
    FLOAT        shift, and go to state 3
    PRINTLN      shift, and go to state 49
    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 35
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    compound_statement    go to state 58
    var_declaration       go to state 59
    type_specifier        go to state 60
    statement             go to state 123
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 122

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 45
    FOR          shift, and go to state 46
    WHILE        shift, and go to state 47
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    RETURN       shift, and go to state 48
    FLOAT        shift, and go to state 3
    PRINTLN      shift, and go to state 49
    ADDOP        shift, and go to state 50
    NOT          shift, and go to state 51
    LPAREN       shift, and go to state 52
    LCURL        shift, and go to state 35
    SEMICOLON    shift, and go to state 54
    ID           shift, and go to state 13
    CONST_INT    shift, and go to state 55
    CONST_FLOAT  shift, and go to state 56

    id                    go to state 57
    compound_statement    go to state 58
    var_declaration       go to state 59
    type_specifier        go to state 60
    statement             go to state 124
    expression_statement  go to state 63
    variable              go to state 64
    expression            go to state 65
    logic_expression      go to state 66
    rel_expression        go to state 67
    simple_expression     go to state 68
    term                  go to state 69
    unary_expression      go to state 70
    factor                go to state 71


State 123

   37 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 37 (statement)


State 124

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 35 (statement)
